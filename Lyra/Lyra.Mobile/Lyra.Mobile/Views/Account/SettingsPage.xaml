<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:vm="clr-namespace:Lyra.Mobile.ViewModels" 
             xmlns:converters="clr-namespace:Lyra.Mobile.Converters" 
             xmlns:Behaviors="clr-namespace:Lyra.Mobile.Behaviors" xmlns:Validators="clr-namespace:Lyra.Mobile.Validators.Implementations"
             mc:Ignorable="d"
             x:Class="Lyra.Mobile.Views.SettingsPage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:ImageConverter x:Key="ImgConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.BindingContext>
        <vm:SettingsViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <StackLayout VerticalOptions="CenterAndExpand"
                     Padding="90, 20, 90, 90">
            <StackLayout.Behaviors>
                <Behaviors:ValidationGroupBehavior x:Name="form" />
            </StackLayout.Behaviors>
            <Frame 
                Padding="0"
                WidthRequest="165"
                HeightRequest="165" 
                CornerRadius="100"
                IsClippedToBounds="True"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                BorderColor="Black"
            >
                <Image 
                    Source="{Binding UserImage, Converter={StaticResource ImgConverter}}" 
                    Aspect="AspectFill"
                >
                </Image>
                <Frame.GestureRecognizers>
                    <TapGestureRecognizer 
                        Command="{Binding ChangeImage}"
                        CommandParameter="Image1"
                    />
                </Frame.GestureRecognizers>
            </Frame>
            
            <Label Text="First Name" />
            <Entry Text="{Binding FirstName}">
                <Entry.Behaviors>
                    <Behaviors:ValidationBehavior Group="{x:Reference form}" PropertyName="Text">
                        <Behaviors:ValidationBehavior.Validators>
                            <Validators:RequiredValidator />
                        </Behaviors:ValidationBehavior.Validators>
                    </Behaviors:ValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label Text="Last Name" />
            <Entry Text="{Binding LastName}">
                <Entry.Behaviors>
                    <Behaviors:ValidationBehavior Group="{x:Reference form}" PropertyName="Text">
                        <Behaviors:ValidationBehavior.Validators>
                            <Validators:RequiredValidator />
                        </Behaviors:ValidationBehavior.Validators>
                    </Behaviors:ValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label Text="Username"/>
            <Entry Text="{Binding Username}">
                <Entry.Behaviors>
                    <Behaviors:ValidationBehavior Group="{x:Reference form}" PropertyName="Text">
                        <Behaviors:ValidationBehavior.Validators>
                            <Validators:RequiredValidator />
                        </Behaviors:ValidationBehavior.Validators>
                    </Behaviors:ValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label Text="Email"/>
            <Entry Text="{Binding Email}">
                <Entry.Behaviors>
                    <Behaviors:ValidationBehavior Group="{x:Reference form}" PropertyName="Text">
                        <Behaviors:ValidationBehavior.Validators>
                            <Validators:RequiredValidator />
                            <Validators:FormatValidator Format="[^@]+@[^\.]+\..+" Message="Incorect format"/>
                        </Behaviors:ValidationBehavior.Validators>
                    </Behaviors:ValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label Text="Phone Number"/>
            <Entry Text="{Binding PhoneNumber}">
                <Entry.Behaviors>
                    <Behaviors:ValidationBehavior Group="{x:Reference form}" PropertyName="Text">
                        <Behaviors:ValidationBehavior.Validators>
                            <Validators:EmptyOrFormatValidator Format="^(\+)?([ 0-9]){9,16}$" Message="Incorect format"/>
                        </Behaviors:ValidationBehavior.Validators>
                    </Behaviors:ValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            
            <Button 
                Text="Save"
                Margin="0, 20, 0, 0"
                CornerRadius="20"
                Style="{StaticResource PurpleButton}"
                Command="{Binding SaveCommand}"
            ></Button>
            <Button 
                Text="Change Password"
                Margin="0, 20, 0, 0"
                CornerRadius="20"
                Style="{StaticResource PurpleButton}"
                Clicked="OnButtonClicked"
            ></Button>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>